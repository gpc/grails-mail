plugins {
    id 'groovy'
    id 'java-library'
    id 'io.github.gradle-nexus.publish-plugin'
    id 'maven-publish'
    id 'signing'
}

version = projectVersion
group = 'org.grails.plugins'
ext.set('grailsVersion', libs.versions.grails.asProvider().get())
ext.set('isReleaseVersion', !version.toString().endsWith('-SNAPSHOT'))
ext.set('isSnapshot', !isReleaseVersion)

apply plugin: 'org.grails.grails-plugin' // Needs to be applied after grailsVersion has been set

repositories {
    mavenCentral()
    maven { url = 'https://repo.grails.org/grails/core' }
}

dependencies {

    compileOnly libs.grails.core // Used in public api, but provided
    compileOnly libs.groovy.core // Used in public api, but provided
    compileOnly libs.servlet.api // Provided

    api libs.javamail.api // Used in public api
    api libs.spring.context // Used in public api
    api libs.spring.context.support // Used in public api

    // These two libraries are used in public api, but not in a way
    // that is meant to be consumed by users of the plugin.
    // Therefore they are set to implementation to not expose unnecessarily
    // to the compileClasspath of plugin users.
    implementation libs.grails.gsp
    implementation libs.grails.web.common

    implementation libs.grails.web.urlmappings
    implementation libs.javamail.impl
    implementation libs.spring.beans
    implementation libs.springboot.autoconfigure

    testImplementation libs.grails.testing.support.core
    testImplementation libs.servlet.api
    testImplementation libs.spock.core

    integrationTestImplementation libs.groovy.xml
    integrationTestImplementation libs.greenmail
    integrationTestImplementation libs.spring.web

    integrationTestRuntimeOnly libs.grails.testing.support.web
    integrationTestRuntimeOnly libs.slf4j.nop // Get rid of warning about missing slf4j implementation during test task
    integrationTestRuntimeOnly libs.springboot.starter.tomcat
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

apply from: layout.projectDirectory.file('gradle/java-config.gradle')
apply from: layout.projectDirectory.file('gradle/grails-plugin-config.gradle')
apply from: layout.projectDirectory.file('gradle/documentation-config.gradle')
apply from: layout.projectDirectory.file('gradle/publishing.gradle')
