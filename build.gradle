plugins {
    id 'groovy'
    id 'java-library'
    id 'io.github.gradle-nexus.publish-plugin'
    id 'maven-publish'
    id 'signing'
}

version = projectVersion
group = 'org.grails.plugins'
ext.set('grailsVersion', libs.versions.grails.get())
ext.set('isReleaseVersion', !version.toString().endsWith('-SNAPSHOT'))
ext.set('isSnapshot', !isReleaseVersion)

apply plugin: 'org.grails.grails-plugin' // Needs to be applied after grailsVersion has been set

repositories {
    mavenCentral()
    maven { url = 'https://repo.grails.org/grails/core' }
}

dependencies {

    implementation(platform(libs.grails.bom))

    compileOnly libs.servlet.api // Provided by the servlet container
    compileOnly 'org.grails:grails-core' // Provided as this is a Grails plugin
    compileOnly 'org.apache.groovy:groovy' // Used in public api, but Groovy is always provided

    compileOnlyApi libs.javamail.api // Used in public api
    api 'org.springframework:spring-context' // Used in public api
    api 'org.springframework:spring-context-support' // Used in public api

    // These two libraries are used in public api, but not in a way
    // that is meant to be consumed by users of the plugin.
    // Therefore they are set to implementation to not expose unnecessarily
    // to the compileClasspath of plugin users.
    implementation 'org.grails.plugins:gsp'
    implementation 'org.grails:grails-web-common'

    implementation libs.javamail.impl // Needs to be implementation (not runtimeOnly), as SMTPMessage is used in MailMessageBuilder
    implementation libs.springboot.autoconfigure
    implementation 'org.grails:grails-web-url-mappings'
    implementation 'org.springframework:spring-beans'

    testRuntimeOnly libs.slf4j.simple
    testImplementation libs.servlet.api
    testImplementation 'org.grails:grails-testing-support'
    testImplementation 'org.spockframework:spock-core'

    integrationTestImplementation libs.greenmail
    integrationTestImplementation 'org.apache.groovy:groovy-xml'
    integrationTestImplementation 'org.springframework:spring-web'

    integrationTestRuntimeOnly libs.springboot.starter.tomcat
    integrationTestRuntimeOnly 'org.grails:grails-web-testing-support'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed', 'standardError', 'standardOut'
    }
}

apply from: layout.projectDirectory.file('gradle/java-config.gradle')
apply from: layout.projectDirectory.file('gradle/grails-plugin-config.gradle')
apply from: layout.projectDirectory.file('gradle/documentation-config.gradle')
apply from: layout.projectDirectory.file('gradle/publishing.gradle')
