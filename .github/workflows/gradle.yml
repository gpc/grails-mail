name: "Java CI"
on:
  push:
    branches:
      - '[4-9]+.[0-9]+.x'
  pull_request:
    branches:
      - '[4-9]+.[0-9]+.x'
jobs:
  test_project:
    name: "Test Project"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        java: [17, 21]
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4
      - name: "☕️ Setup JDK"
        uses: actions/setup-java@v4
        with:
          distribution: liberica
          java-version: ${{ matrix.java }}
      - name: "🐘 Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}
      - name: "🏃 Run tests"
        run: ./gradlew check
  publish_snapshot:
    name: "Build Project and Publish Snapshot release"
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4
      - name: "☕️ Setup JDK"
        uses: actions/setup-java@v4
        with: {
          java-version: 17,
          distribution: liberica
        }
      - name: "🐘 Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}
      - name: "🔨 Build Project"
        run: ./gradlew build
      - name: "📤 Publish Snapshot version to Artifactory (repo.grails.org)"
        if: success()
        env:
          ORG_GRADLE_PROJECT_artifactoryPublishUsername: ${{ secrets.ARTIFACTORY_USERNAME }}
          ORG_GRADLE_PROJECT_artifactoryPublishPassword: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: >
          ./gradlew
          -Dorg.gradle.internal.publish.checksums.insecure=true
          publish
      - name: "📖 Generate Snapshot Documentation"
        if: success()
        run: ./gradlew docs
      - name: "📤 Publish Snapshot Documentation to Github Pages"
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@grails
        env:
          BRANCH: gh-pages
          COMMIT_EMAIL: ${{ vars.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ vars.GIT_USER_NAME }}
          FOLDER: build/docs/manual
          GH_TOKEN: ${{ secrets.GH_TOKEN }}